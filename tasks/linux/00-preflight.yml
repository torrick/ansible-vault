- name: check "vault_download_url" variable
  tags: always
  assert:
    that:
      - vault_download_url is defined
      - vault_download_url is string
      - vault_download_url | length
    quiet: true

- name: check if "{{ vault_download_url }}" is online
  become: false
  run_once: true
  delegate_to: localhost
  check_mode: false
  uri:
    url: "{{ vault_download_url }}"
    status_code: 200
  register: _result
  retries: "3"
  delay: "5"
  until: _result.status == 200

- name: check "vault_version" variable
  tags: always
  assert:
    that:
      - vault_version is defined
      - vault_version is string
      - vault_version | length
    quiet: true

- name: check "vault_dirs" variable
  tags: always
  assert:
    that:
      - vault_dirs is defined
      - vault_dirs is mapping
      - vault_dirs | length
    quiet: true

- name: check "vault_config" variable
  tags: always
  assert:
    that:
      - vault_config is defined
      - vault_config is mapping
      - vault_config | length
    quiet: true

- name: check "vault_configs" variable
  tags: always
  assert:
    that:
      - vault_configs is defined
      - vault_configs is mapping
    quiet: true

- name: check "vault_service" variable
  tags: always
  assert:
    that:
      - vault_service is defined
      - vault_service is string
      - vault_service | length
    quiet: true
  when: ansible_service_mgr == "openrc"

- name: check "vault_unit" variable
  tags: always
  assert:
    that:
      - vault_unit is defined
      - vault_unit is string
      - vault_unit | length
    quiet: true

- name: set checksum for {{ _arch }} architecture
  set_fact:
    _archive_checksum: "{{ item.split(' ')[0] }}"
  with_items: "{{ _checksums }}"
  when:
    - "('linux_' + _arch + '.zip') in item"
